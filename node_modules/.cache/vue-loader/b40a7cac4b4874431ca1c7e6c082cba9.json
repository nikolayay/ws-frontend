{"remainingRequest":"/Users/nikolay/new-wounds-scars/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nikolay/new-wounds-scars/frontend/src/components/SignUp.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nikolay/new-wounds-scars/frontend/src/components/SignUp.vue","mtime":1556201637785},{"path":"/Users/nikolay/new-wounds-scars/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nikolay/new-wounds-scars/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nikolay/new-wounds-scars/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nikolay/new-wounds-scars/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { SIGNUP_MUTATION } from \"@/graphql/mutations\";\nimport SignUpDemographics from \"@/components/SignUpDemographics\";\nimport Vue from \"vue\";\nimport VeeValidate from \"vee-validate\";\n\nVue.use(VeeValidate, {\n  events: \"\"\n});\n\nexport default {\n  name: \"SignUp\",\n  components: { SignUpDemographics },\n  title: `Sign Up | ${process.env.VUE_APP_NAME}`,\n  data() {\n    return {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      demographics: {\n        dob: null,\n        gender: null,\n        ethnicity: null\n      }\n    };\n  },\n  methods: {\n    async signup() {\n      const valid = await this.$validator.validateAll();\n      if (valid) {\n        this.$Progress.start();\n        const res = await this.$apollo\n          .mutate({\n            mutation: SIGNUP_MUTATION,\n            variables: {\n              name: this.name,\n              email: this.email,\n              password: this.password,\n              ...this.demographics\n            }\n          })\n          .catch(({ message }) => {\n            this.$Progress.fail();\n            this.$toast.open({\n              message,\n              type: \"is-danger\",\n              position: \"is-bottom\"\n            });\n          });\n\n        if (res) {\n          this.$Progress.finish();\n          localStorage.setItem(\"USER_TOKEN\", res.data.signup.token);\n          this.$toast.open({\n            message: \"Sign up successful!\",\n            type: \"is-success\",\n            position: \"is-bottom\"\n          });\n          this.$router.replace(\"/\");\n        }\n      }\n    }\n  }\n};\n",{"version":3,"sources":["SignUp.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SignUp.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <section class=\"container auth-form box\">\n    <b-field :type=\"{'is-danger': errors.has('name')}\" :message=\"errors.first('name')\" label=\"Name\">\n      <b-input\n        name=\"name\"\n        type=\"name\"\n        v-validate=\"'required|alpha_spaces'\"\n        placeholder=\"Your Name\"\n        v-model=\"name\"\n      ></b-input>\n    </b-field>\n    <b-field\n      :type=\"{'is-danger': errors.has('email')}\"\n      :message=\"errors.first('email')\"\n      label=\"Email\"\n    >\n      <b-input\n        name=\"email\"\n        type=\"email\"\n        v-validate=\"'required|email'\"\n        placeholder=\"Your Email\"\n        v-model=\"email\"\n      ></b-input>\n    </b-field>\n    <b-field\n      :type=\"{'is-danger': errors.has('password')}\"\n      :message=\"errors.first('password')\"\n      label=\"Password\"\n    >\n      <b-input\n        name=\"password\"\n        type=\"password\"\n        password-reveal\n        v-validate=\"'required'\"\n        placeholder=\"Your Password\"\n        v-model=\"password\"\n      ></b-input>\n    </b-field>\n\n    <sign-up-demographics :wizard-data=\"demographics\"/>\n\n    <br>\n    <a @click.prevent=\"signup\" class=\"button is-fullwidth is-primary\">Sign Up</a>\n    <small>Already have an account?\n      <router-link to=\"/login\">Log In.</router-link>\n    </small>\n  </section>\n</template>\n\n<script>\nimport { SIGNUP_MUTATION } from \"@/graphql/mutations\";\nimport SignUpDemographics from \"@/components/SignUpDemographics\";\nimport Vue from \"vue\";\nimport VeeValidate from \"vee-validate\";\n\nVue.use(VeeValidate, {\n  events: \"\"\n});\n\nexport default {\n  name: \"SignUp\",\n  components: { SignUpDemographics },\n  title: `Sign Up | ${process.env.VUE_APP_NAME}`,\n  data() {\n    return {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      demographics: {\n        dob: null,\n        gender: null,\n        ethnicity: null\n      }\n    };\n  },\n  methods: {\n    async signup() {\n      const valid = await this.$validator.validateAll();\n      if (valid) {\n        this.$Progress.start();\n        const res = await this.$apollo\n          .mutate({\n            mutation: SIGNUP_MUTATION,\n            variables: {\n              name: this.name,\n              email: this.email,\n              password: this.password,\n              ...this.demographics\n            }\n          })\n          .catch(({ message }) => {\n            this.$Progress.fail();\n            this.$toast.open({\n              message,\n              type: \"is-danger\",\n              position: \"is-bottom\"\n            });\n          });\n\n        if (res) {\n          this.$Progress.finish();\n          localStorage.setItem(\"USER_TOKEN\", res.data.signup.token);\n          this.$toast.open({\n            message: \"Sign up successful!\",\n            type: \"is-success\",\n            position: \"is-bottom\"\n          });\n          this.$router.replace(\"/\");\n        }\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.auth-form {\n  max-width: 300px;\n}\na.button {\n  margin-bottom: 5px;\n}\n</style>\n"]}]}