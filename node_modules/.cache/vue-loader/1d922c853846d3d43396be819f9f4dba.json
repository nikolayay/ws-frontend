{"remainingRequest":"/Users/nikolay/new-wounds-scars/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nikolay/new-wounds-scars/frontend/src/components/Login.vue?vue&type=style&index=0&id=189312e4&scoped=true&lang=css&","dependencies":[{"path":"/Users/nikolay/new-wounds-scars/frontend/src/components/Login.vue","mtime":1549737924500},{"path":"/Users/nikolay/new-wounds-scars/frontend/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/nikolay/new-wounds-scars/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/nikolay/new-wounds-scars/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/nikolay/new-wounds-scars/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nikolay/new-wounds-scars/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.auth-form {\n  max-width: 300px;\n}\na.button {\n  margin-bottom: 5px;\n}\n",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6FA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <section class=\"container auth-form box\">\n    <b-field\n      :type=\"{'is-danger': errors.has('email')}\"\n      :message=\"errors.first('email')\"\n      label=\"Email\"\n    >\n      <b-input\n        name=\"email\"\n        type=\"email\"\n        v-validate=\"'required|email'\"\n        placeholder=\"Your Email\"\n        v-model=\"email\"\n      ></b-input>\n    </b-field>\n    <b-field\n      :type=\"{'is-danger': errors.has('password')}\"\n      :message=\"errors.first('password')\"\n      label=\"Password\"\n    >\n      <b-input\n        name=\"password\"\n        type=\"password\"\n        password-reveal\n        v-validate=\"'required'\"\n        placeholder=\"Your Password\"\n        v-model=\"password\"\n      ></b-input>\n    </b-field>\n    <br>\n    <a @click.prevent=\"login\" class=\"button is-fullwidth is-primary\">Log In</a>\n    <small>Don`t have an account?\n      <router-link to=\"/signup\">Sign Up.</router-link>\n    </small>\n  </section>\n</template>\n\n<script>\nimport { LOGIN_MUTATION } from \"@/graphql/mutations\";\nimport Vue from \"vue\";\nimport VeeValidate from \"vee-validate\";\n\nVue.use(VeeValidate, {\n  events: \"\"\n});\n\nexport default {\n  name: \"Login\",\n  title: `Login | ${process.env.VUE_APP_NAME}`,\n  data() {\n    return {\n      email: \"\",\n      password: \"\"\n    };\n  },\n  methods: {\n    async login() {\n      const valid = await this.$validator.validateAll();\n\n      if (valid) {\n        this.$Progress.start();\n\n        const res = await this.$apollo\n          .mutate({\n            mutation: LOGIN_MUTATION,\n            variables: { email: this.email, password: this.password }\n          })\n          .catch(({ message }) => {\n            this.$Progress.fail();\n            this.$toast.open({\n              message,\n              type: \"is-danger\",\n              position: \"is-bottom\"\n            });\n          });\n\n        if (res) {\n          this.$Progress.finish();\n          localStorage.setItem(\"USER_TOKEN\", res.data.login.token);\n          this.$toast.open({\n            message: \"Login successful!\",\n            type: \"is-success\",\n            position: \"is-bottom\"\n          });\n          this.$router.replace(\"/\");\n        }\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.auth-form {\n  max-width: 300px;\n}\na.button {\n  margin-bottom: 5px;\n}\n</style>\n"]}]}