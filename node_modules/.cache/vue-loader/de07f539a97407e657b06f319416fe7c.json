{"remainingRequest":"/Users/nikolay/projects/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nikolay/projects/frontend/src/components/ScarCard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nikolay/projects/frontend/src/components/ScarCard.vue","mtime":1556202083176},{"path":"/Users/nikolay/projects/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nikolay/projects/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nikolay/projects/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nikolay/projects/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport moment from \"moment\";\nimport Vue from \"vue\";\nimport ScarInfoModal from \"./modals/ScarInfoModal.vue\";\n\nVue.prototype.moment = moment;\n\nexport default {\n  props: {\n    scar: {\n      type: Object,\n      required: true\n    }\n  },\n\n  components: {\n    ScarInfoModal\n  },\n\n  computed: {\n    causes() {\n      return this.scar.causes.join(\", \") || \"not specified\";\n    },\n    bodySites() {\n      return this.scar.bodySites.join(\", \") || \"not specified\";\n    },\n    posas() {\n      return this.scar.posasScore || 0;\n    },\n    date() {\n      return moment(this.scar.date).fromNow() || \"not specified\";\n    },\n    status() {\n      return this.scar.processingStatus\n        ? this.scar.processingStatus[0] +\n            this.scar.processingStatus.toLowerCase().slice(1)\n        : \"Error\";\n    },\n    treatments() {\n      return this.scar.treatmetns || null;\n    },\n    statusType() {\n      switch (this.status) {\n        case \"Success\":\n          return \"is-primary\";\n        case \"Processing\":\n          return \"is-info\";\n        default:\n          return \"is-warning\";\n      }\n    }\n    \n  },\n\n  methods: {\n    showInfo(scar) {\n      const props = {\n        id: scar.id,\n        causes: this.causes,\n        bodySites: this.bodySites,\n        posas: this.posas,\n        date: this.date,\n        treatments: this.treatments\n      };\n      this.$modal.open({\n        parent: this,\n        component: ScarInfoModal,\n        props,\n        hasModalCard: true\n      });\n    }\n  }\n};\n",{"version":3,"sources":["ScarCard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ScarCard.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div @click=\"showInfo(scar)\" class=\"card\">\n    <header class=\"card-header\">\n      <b-tag class=\"card-header-title status\" :type=\"statusType\" rounded>{{status}}</b-tag>\n      <p class=\"card-header-title time\">{{moment(scar.addedAt).fromNow()}}</p>\n    </header>\n    <div class=\"card-content\">\n      <div class=\"content\">\n        <div class=\"info\">\n          <div>\n            <strong>Cause(s):</strong>\n            {{causes}}\n          </div>\n\n          <div>\n            <strong>Body Site(s):</strong>\n            {{bodySites}}\n          </div>\n\n          <div>\n            <strong>Posas Score:</strong>\n            {{posas}}\n          </div>\n          <div>\n            <strong>Date of injury:</strong>\n            {{date}}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport moment from \"moment\";\nimport Vue from \"vue\";\nimport ScarInfoModal from \"./modals/ScarInfoModal.vue\";\n\nVue.prototype.moment = moment;\n\nexport default {\n  props: {\n    scar: {\n      type: Object,\n      required: true\n    }\n  },\n\n  components: {\n    ScarInfoModal\n  },\n\n  computed: {\n    causes() {\n      return this.scar.causes.join(\", \") || \"not specified\";\n    },\n    bodySites() {\n      return this.scar.bodySites.join(\", \") || \"not specified\";\n    },\n    posas() {\n      return this.scar.posasScore || 0;\n    },\n    date() {\n      return moment(this.scar.date).fromNow() || \"not specified\";\n    },\n    status() {\n      return this.scar.processingStatus\n        ? this.scar.processingStatus[0] +\n            this.scar.processingStatus.toLowerCase().slice(1)\n        : \"Error\";\n    },\n    treatments() {\n      return this.scar.treatmetns || null;\n    },\n    statusType() {\n      switch (this.status) {\n        case \"Success\":\n          return \"is-primary\";\n        case \"Processing\":\n          return \"is-info\";\n        default:\n          return \"is-warning\";\n      }\n    }\n    \n  },\n\n  methods: {\n    showInfo(scar) {\n      const props = {\n        id: scar.id,\n        causes: this.causes,\n        bodySites: this.bodySites,\n        posas: this.posas,\n        date: this.date,\n        treatments: this.treatments\n      };\n      this.$modal.open({\n        parent: this,\n        component: ScarInfoModal,\n        props,\n        hasModalCard: true\n      });\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 24px;\n}\n\n.card-header-title {\n  flex-grow: 0;\n  font-size: 13px;\n}\n\n.content {\n  display: grid;\n  grid-template-columns: auto auto;\n  justify-items: start;\n\n  .info {\n    text-align: start;\n  }\n}\n\n\n.status {\n  margin-left: 4px;\n}\n\n.ball {\n  width: 1rem;\n  height: 1rem;\n  margin-right: 5px;\n  border-radius: 50%;\n  border: 1px solid black;\n}\n</style>"]}]}