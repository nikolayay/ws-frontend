{"remainingRequest":"/Users/nikolay/new-wounds-scars/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nikolay/new-wounds-scars/frontend/src/components/wizard/CreateEntryStepperImageUpload.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nikolay/new-wounds-scars/frontend/src/components/wizard/CreateEntryStepperImageUpload.vue","mtime":1556260285254},{"path":"/Users/nikolay/new-wounds-scars/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nikolay/new-wounds-scars/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nikolay/new-wounds-scars/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nikolay/new-wounds-scars/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { fabric } from \"fabric\";\nimport Warning from \"@/components/misc/Warning\";\nexport default {\n  props: {\n    wizardData: {\n      type: Object,\n      required: true\n    }\n  },\n  components: {\n    Warning\n  },\n  data() {\n    return {\n      filename: null,\n      displayFileName: null,\n      form: {\n        image: \"\"\n      }\n    };\n\n  },\n\n\n  mounted: function() {\n    var canvas = (this.__canvas = new fabric.Canvas(\"c\", {\n      isDrawingMode: true\n    }));\n\n    canvas.selection = true;\n    canvas.setHeight(500);\n    canvas.setWidth(500);\n\n    canvas.freeDrawingBrush = new fabric[\"PencilBrush\"](canvas);\n    canvas.freeDrawingBrush.color = \"Black\";\n    canvas.freeDrawingBrush.width = 10;\n  },\n\n  methods: {\n    clearArtboard() {\n      var canvas = this.__canvas;\n      canvas.clear();\n      this.filename = null\n    },\n\n    async saveImage() {\n      var canvas = this.__canvas;\n\n      /*var img = new Image();\n      img.id = \"pic\";\n      img.crossOrigin = 'Anonymous';\n      img.src = canvas.toDataURL();*/\n\n      const data = new FormData();\n      data.append(\"file\", canvas.toDataURL(\"image/jpg\"));\n      data.append(\"upload_preset\", \"woundscars\");\n      const res = await fetch(\n        \"https://api.cloudinary.com/v1_1/nikolamus/image/upload\",\n        {\n          method: \"POST\",\n          body: data\n        }\n      );\n      const uploadedFileUpdate = await res.json();\n\n      this.$snackbar.open({\n        message: `Image analysed sucessfullly`,\n        position: \"is-top\"\n      });\n\n      /*\n      data.append(\"file\", img);\n      data.append(\"upload_preset\", \"woundscars\");\n      const recog = await fetch(\n        \"https://api.cloudinary.com/v1_1/nikolamus/image/upload\",\n          {\n            method: \"POST\",\n            body: data\n          }\n      );\n\n      const uploadedFileUpdate = await recog.json();*/\n\n      // update form\n      this.form.image = uploadedFileUpdate.secure_url;\n      Object.assign(this.wizardData, this.form);\n    }\n  },\n\n  watch: {\n    async filename(file) {\n      if (this.filename == null) {\n        }\n      else {\n        this.$Progress.start();\n        const data = new FormData();\n        data.append(\"file\", file);\n        data.append(\"upload_preset\", \"woundscars\");\n        const res = await fetch(\n          \"https://api.cloudinary.com/v1_1/nikolamus/image/upload\",\n          {\n            method: \"POST\",\n            body: data\n          }\n        );\n        const uploadedFile = await res.json();\n        // user feedback\n        this.$Progress.finish();\n        this.$snackbar.open({\n          message: `Image uploaded sucessfullly`,\n          position: \"is-top\"\n        });\n        this.displayFileName = file.name;\n\n        var canvas = this.__canvas;\n\n        canvas.setHeight(uploadedFile.height);\n        canvas.setWidth(uploadedFile.width);\n\n        fabric.Image.fromURL(\n          uploadedFile.secure_url,\n          function(myImg) {\n            var img1 = myImg.set({\n              left: 0,\n              top: 0,\n              width: uploadedFile.width,\n              height: uploadedFile.height\n            });\n            canvas.add(img1);\n          },\n          { crossOrigin: \"anonymous\" }\n        );\n      }\n    }\n  }\n};\n",{"version":3,"sources":["CreateEntryStepperImageUpload.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CreateEntryStepperImageUpload.vue","sourceRoot":"src/components/wizard","sourcesContent":["<template>\n  <div>\n    <warning>Image submission is not secure and is only for demo purposes.</warning>\n\n    <canvas id=\"c\" style=\"border:1px solid #CA0000;\"></canvas>\n\n    <b-field position=\"is-centered\" class=\"file\">\n      <b-upload required accept=\"image/*\" v-model=\"filename\">\n        <a class=\"button is-primary\">\n          <b-icon icon=\"upload\"></b-icon>\n          <span>Click to upload</span>\n        </a>\n      </b-upload>\n      <span class=\"file-name\" v-if=\"filename\">{{ displayFileName }}</span>\n      <a class=\"button is-primary\" v-on:click=\"clearArtboard\">\n        <span>Clear</span>\n      </a>\n      <a class=\"button is-primary\" v-on:click=\"saveImage\">\n        <span>Analyse</span>\n      </a>\n    </b-field>\n\n    <!-- <button @click=\"isModalActive=true\" class=\"button is-primary\">Back to label</button> -->\n    <!-- <b-modal :active.sync=\"isModalActive\" has-modal-card>\n      <scar-label-modal>\n        <img class=\"scar-label\" src=\"@/assets/test.jpg\" alt>\n      </scar-label-modal>\n    </b-modal>-->\n    <br>\n  </div>\n</template>\n\n\n<script>\nimport { fabric } from \"fabric\";\nimport Warning from \"@/components/misc/Warning\";\nexport default {\n  props: {\n    wizardData: {\n      type: Object,\n      required: true\n    }\n  },\n  components: {\n    Warning\n  },\n  data() {\n    return {\n      filename: null,\n      displayFileName: null,\n      form: {\n        image: \"\"\n      }\n    };\n\n  },\n\n\n  mounted: function() {\n    var canvas = (this.__canvas = new fabric.Canvas(\"c\", {\n      isDrawingMode: true\n    }));\n\n    canvas.selection = true;\n    canvas.setHeight(500);\n    canvas.setWidth(500);\n\n    canvas.freeDrawingBrush = new fabric[\"PencilBrush\"](canvas);\n    canvas.freeDrawingBrush.color = \"Black\";\n    canvas.freeDrawingBrush.width = 10;\n  },\n\n  methods: {\n    clearArtboard() {\n      var canvas = this.__canvas;\n      canvas.clear();\n      this.filename = null\n    },\n\n    async saveImage() {\n      var canvas = this.__canvas;\n\n      /*var img = new Image();\n      img.id = \"pic\";\n      img.crossOrigin = 'Anonymous';\n      img.src = canvas.toDataURL();*/\n\n      const data = new FormData();\n      data.append(\"file\", canvas.toDataURL(\"image/jpg\"));\n      data.append(\"upload_preset\", \"woundscars\");\n      const res = await fetch(\n        \"https://api.cloudinary.com/v1_1/nikolamus/image/upload\",\n        {\n          method: \"POST\",\n          body: data\n        }\n      );\n      const uploadedFileUpdate = await res.json();\n\n      this.$snackbar.open({\n        message: `Image analysed sucessfullly`,\n        position: \"is-top\"\n      });\n\n      /*\n      data.append(\"file\", img);\n      data.append(\"upload_preset\", \"woundscars\");\n      const recog = await fetch(\n        \"https://api.cloudinary.com/v1_1/nikolamus/image/upload\",\n          {\n            method: \"POST\",\n            body: data\n          }\n      );\n\n      const uploadedFileUpdate = await recog.json();*/\n\n      // update form\n      this.form.image = uploadedFileUpdate.secure_url;\n      Object.assign(this.wizardData, this.form);\n    }\n  },\n\n  watch: {\n    async filename(file) {\n      if (this.filename == null) {\n        }\n      else {\n        this.$Progress.start();\n        const data = new FormData();\n        data.append(\"file\", file);\n        data.append(\"upload_preset\", \"woundscars\");\n        const res = await fetch(\n          \"https://api.cloudinary.com/v1_1/nikolamus/image/upload\",\n          {\n            method: \"POST\",\n            body: data\n          }\n        );\n        const uploadedFile = await res.json();\n        // user feedback\n        this.$Progress.finish();\n        this.$snackbar.open({\n          message: `Image uploaded sucessfullly`,\n          position: \"is-top\"\n        });\n        this.displayFileName = file.name;\n\n        var canvas = this.__canvas;\n\n        canvas.setHeight(uploadedFile.height);\n        canvas.setWidth(uploadedFile.width);\n\n        fabric.Image.fromURL(\n          uploadedFile.secure_url,\n          function(myImg) {\n            var img1 = myImg.set({\n              left: 0,\n              top: 0,\n              width: uploadedFile.width,\n              height: uploadedFile.height\n            });\n            canvas.add(img1);\n          },\n          { crossOrigin: \"anonymous\" }\n        );\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.button {\n  margin: auto !important;\n}\n</style>\n\n\n"]}]}