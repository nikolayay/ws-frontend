{"remainingRequest":"/Users/nikolay/new-wounds-scars/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nikolay/new-wounds-scars/frontend/src/components/CreateEntryStepper.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nikolay/new-wounds-scars/frontend/src/components/CreateEntryStepper.vue","mtime":1556201637780},{"path":"/Users/nikolay/new-wounds-scars/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nikolay/new-wounds-scars/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nikolay/new-wounds-scars/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nikolay/new-wounds-scars/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { FormWizard, TabContent, WizardButton } from \"vue-form-wizard\";\nimport \"vue-form-wizard/dist/vue-form-wizard.min.css\";\nimport CreateEntryStepperPosas from \"@/components/CreateEntryStepperPosas\";\nimport CreateEntryStepperImageUpload from \"@/components/CreateEntryStepperImageUpload\";\nimport CreateEntryStepperScarInfo from \"@/components/CreateEntryStepperScarInfo\";\nimport { CREATE_SCAR_MUTATION } from \"@/graphql/mutations\";\nimport { ME_QUERY } from \"@/graphql/queries\";\n\nexport default {\n  components: {\n    FormWizard,\n    TabContent,\n    WizardButton,\n    CreateEntryStepperPosas,\n    CreateEntryStepperImageUpload,\n    CreateEntryStepperScarInfo\n  },\n\n  data: () => {\n    return {\n      me: {},\n      form: {\n        posas: {\n          posas_q1: null,\n          posas_q2: null,\n          posas_q3: null,\n          posas_q4: null,\n          posas_q5: null,\n          posas_q6: null,\n          posas_q7: null\n        },\n        scarInfo: {\n          prevTreatment: \"No\",\n          scarDate: null,\n          causes: null,\n          selected: null,\n          conditions: null\n        },\n        image: null\n      }\n    };\n  },\n\n  apollo: {\n    me: {\n      query: ME_QUERY\n    }\n  },\n\n  methods: {\n    async submitEntry() {\n      const posasScore = Object.values(this.form.posas).reduce(\n        (curr, prev) => curr + prev,\n        0\n      );\n      this.$Progress.start();\n\n      // create news scar\n      await this.$apollo\n        .mutate({\n          mutation: CREATE_SCAR_MUTATION,\n          variables: {\n            ...this.form.scarInfo,\n            prevTreatment: this.form.scarInfo === \"Yes\" ? true : false,\n            bodySites: this.form.scarInfo.selected.map(el => el.id),\n            image: this.form.image,\n            date: new Date(this.form.scarInfo.scarDate),\n            addedAt: new Date(),\n            posasScore\n          }\n        })\n        .then(() => {\n          this.$Progress.finish();\n          this.$toast.open({\n            message: \"New entry added successfully!\",\n            type: \"is-success\",\n            position: \"is-bottom\"\n          });\n          // refetch me query\n          this.$apollo.queries.me.refetch();\n\n          // redirect\n          this.$router.replace(\"/\");\n        })\n        .catch(() => {\n          this.$Progress.fail();\n          this.$toast.open({\n            message: \"Please fill out all fields.\",\n            type: \"is-danger\",\n            position: \"is-bottom\"\n          });\n        });\n    }\n  }\n};\n",{"version":3,"sources":["CreateEntryStepper.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CreateEntryStepper.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <form-wizard\n    title=\"Information about your scar\"\n    subtitle=\"Please complete the fields below\"\n    @on-complete=\"submitEntry\"\n    color=\"#ca0000\"\n  >\n    <tab-content title=\"Information about your scar\">\n      <create-entry-stepper-scar-info :wizard-data=\"form.scarInfo\"></create-entry-stepper-scar-info>\n    </tab-content>\n    <tab-content ref=\"posasTab\" title=\"Self Assessment\">\n      <create-entry-stepper-posas :wizard-data=\"form.posas\"></create-entry-stepper-posas>\n    </tab-content>\n    <tab-content title=\"Provide an Image\">\n      <create-entry-stepper-image-upload :wizard-data=\"form\"></create-entry-stepper-image-upload>\n    </tab-content>\n\n    <template slot=\"footer\" scope=\"props\">\n      <div v-show=\"props.activeTabIndex !== 1\">\n        <div class=\"wizard-footer-left\">\n          <wizard-button\n            @click.native=\"props.prevTab()\"\n            v-if=\"props.activeTabIndex > 0\"\n            :style=\"props.fillButtonStyle\"\n          >Back</wizard-button>\n        </div>\n        <div class=\"wizard-footer-right\">\n          <wizard-button\n            v-if=\"!props.isLastStep\"\n            @click.native=\"props.nextTab()\"\n            class=\"wizard-footer-right\"\n            :style=\"props.fillButtonStyle\"\n          >Next</wizard-button>\n\n          <wizard-button\n            v-else\n            @click.native=\"alert('Done')\"\n            class=\"wizard-footer-right finish-button\"\n            :style=\"props.fillButtonStyle\"\n          >{{props.isLastStep ? 'Done' : 'Next'}}</wizard-button>\n        </div>\n      </div>\n    </template>\n  </form-wizard>\n</template>\n\n<script>\nimport { FormWizard, TabContent, WizardButton } from \"vue-form-wizard\";\nimport \"vue-form-wizard/dist/vue-form-wizard.min.css\";\nimport CreateEntryStepperPosas from \"@/components/CreateEntryStepperPosas\";\nimport CreateEntryStepperImageUpload from \"@/components/CreateEntryStepperImageUpload\";\nimport CreateEntryStepperScarInfo from \"@/components/CreateEntryStepperScarInfo\";\nimport { CREATE_SCAR_MUTATION } from \"@/graphql/mutations\";\nimport { ME_QUERY } from \"@/graphql/queries\";\n\nexport default {\n  components: {\n    FormWizard,\n    TabContent,\n    WizardButton,\n    CreateEntryStepperPosas,\n    CreateEntryStepperImageUpload,\n    CreateEntryStepperScarInfo\n  },\n\n  data: () => {\n    return {\n      me: {},\n      form: {\n        posas: {\n          posas_q1: null,\n          posas_q2: null,\n          posas_q3: null,\n          posas_q4: null,\n          posas_q5: null,\n          posas_q6: null,\n          posas_q7: null\n        },\n        scarInfo: {\n          prevTreatment: \"No\",\n          scarDate: null,\n          causes: null,\n          selected: null,\n          conditions: null\n        },\n        image: null\n      }\n    };\n  },\n\n  apollo: {\n    me: {\n      query: ME_QUERY\n    }\n  },\n\n  methods: {\n    async submitEntry() {\n      const posasScore = Object.values(this.form.posas).reduce(\n        (curr, prev) => curr + prev,\n        0\n      );\n      this.$Progress.start();\n\n      // create news scar\n      await this.$apollo\n        .mutate({\n          mutation: CREATE_SCAR_MUTATION,\n          variables: {\n            ...this.form.scarInfo,\n            prevTreatment: this.form.scarInfo === \"Yes\" ? true : false,\n            bodySites: this.form.scarInfo.selected.map(el => el.id),\n            image: this.form.image,\n            date: new Date(this.form.scarInfo.scarDate),\n            addedAt: new Date(),\n            posasScore\n          }\n        })\n        .then(() => {\n          this.$Progress.finish();\n          this.$toast.open({\n            message: \"New entry added successfully!\",\n            type: \"is-success\",\n            position: \"is-bottom\"\n          });\n          // refetch me query\n          this.$apollo.queries.me.refetch();\n\n          // redirect\n          this.$router.replace(\"/\");\n        })\n        .catch(() => {\n          this.$Progress.fail();\n          this.$toast.open({\n            message: \"Please fill out all fields.\",\n            type: \"is-danger\",\n            position: \"is-bottom\"\n          });\n        });\n    }\n  }\n};\n</script>\n"]}]}