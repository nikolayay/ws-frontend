{"remainingRequest":"/Users/nikolay/new-wounds-scars/frontend/node_modules/thread-loader/dist/cjs.js!/Users/nikolay/new-wounds-scars/frontend/node_modules/babel-loader/lib/index.js!/Users/nikolay/new-wounds-scars/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/nikolay/new-wounds-scars/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nikolay/new-wounds-scars/frontend/src/components/CreateEntryStepperImageUpload.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nikolay/new-wounds-scars/frontend/src/components/CreateEntryStepperImageUpload.vue","mtime":1549737924497},{"path":"/Users/nikolay/new-wounds-scars/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nikolay/new-wounds-scars/frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nikolay/new-wounds-scars/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nikolay/new-wounds-scars/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nikolay/new-wounds-scars/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/nikolay/new-wounds-scars/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Warning from \"./Warning\";\nexport default {\n  props: {\n    wizardData: {\n      type: Object,\n      required: true\n    }\n  },\n  components: {\n    Warning: Warning\n  },\n  data: function data() {\n    return {\n      filename: null,\n      displayFileName: null,\n      form: {\n        image: \"\"\n      }\n    };\n  },\n  watch: {\n    filename: function () {\n      var _filename = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(file) {\n        var data, res, uploadedFile;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.$Progress.start();\n                console.log(\"uploading file...\");\n                data = new FormData();\n                data.append(\"file\", file);\n                data.append(\"upload_preset\", \"woundscars\");\n                _context.next = 7;\n                return fetch(\"https://api.cloudinary.com/v1_1/nikolamus/image/upload\", {\n                  method: \"POST\",\n                  body: data\n                });\n\n              case 7:\n                res = _context.sent;\n                _context.next = 10;\n                return res.json();\n\n              case 10:\n                uploadedFile = _context.sent;\n                // user feedback\n                this.$Progress.finish();\n                this.$snackbar.open({\n                  message: \"Image uploaded sucessfullly\",\n                  position: \"is-top\"\n                });\n                this.displayFileName = file.name; // update form\n\n                this.form.image = uploadedFile.secure_url;\n                Object.assign(this.wizardData, this.form);\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function filename(_x) {\n        return _filename.apply(this, arguments);\n      }\n\n      return filename;\n    }()\n  }\n};",{"version":3,"sources":["CreateEntryStepperImageUpload.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAmBA,OAAA,OAAA,MAAA,WAAA;AACA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA;AADA,GADA;AAOA,EAAA,UAAA,EAAA;AACA,IAAA,OAAA,EAAA;AADA,GAPA;AAUA,EAAA,IAVA,kBAUA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,IADA;AAEA,MAAA,eAAA,EAAA,IAFA;AAGA,MAAA,IAAA,EAAA;AACA,QAAA,KAAA,EAAA;AADA;AAHA,KAAA;AAOA,GAlBA;AAoBA,EAAA,KAAA,EAAA;AACA,IAAA,QADA;AAAA;AAAA;AAAA,+CACA,IADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,qBAAA,SAAA,CAAA,KAAA;AACA,gBAAA,OAAA,CAAA,GAAA,CAAA,mBAAA;AACA,gBAAA,IAJA,GAIA,IAAA,QAAA,EAJA;AAKA,gBAAA,IAAA,CAAA,MAAA,CAAA,MAAA,EAAA,IAAA;AACA,gBAAA,IAAA,CAAA,MAAA,CAAA,eAAA,EAAA,YAAA;AANA;AAAA,uBAOA,KAAA,CACA,wDADA,EAEA;AACA,kBAAA,MAAA,EAAA,MADA;AAEA,kBAAA,IAAA,EAAA;AAFA,iBAFA,CAPA;;AAAA;AAOA,gBAAA,GAPA;AAAA;AAAA,uBAcA,GAAA,CAAA,IAAA,EAdA;;AAAA;AAcA,gBAAA,YAdA;AAeA;AACA,qBAAA,SAAA,CAAA,MAAA;AACA,qBAAA,SAAA,CAAA,IAAA,CAAA;AACA,kBAAA,OAAA,+BADA;AAEA,kBAAA,QAAA,EAAA;AAFA,iBAAA;AAIA,qBAAA,eAAA,GAAA,IAAA,CAAA,IAAA,CArBA,CAuBA;;AACA,qBAAA,IAAA,CAAA,KAAA,GAAA,YAAA,CAAA,UAAA;AACA,gBAAA,MAAA,CAAA,MAAA,CAAA,KAAA,UAAA,EAAA,KAAA,IAAA;;AAzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AApBA,CAAA","sourcesContent":["<template>\n  <div>\n    <warning>Image submission is not secure and is only for demo purposes.</warning>\n\n    <b-field position=\"is-centered\" class=\"file\">\n      <b-upload required accept=\"image/*\" v-model=\"filename\">\n        <a class=\"button is-primary\">\n          <b-icon icon=\"upload\"></b-icon>\n          <span>Click to upload</span>\n        </a>\n      </b-upload>\n      <span class=\"file-name\" v-if=\"filename\">{{ displayFileName }}</span>\n    </b-field>\n\n    <br>\n  </div>\n</template>\n\n<script>\nimport Warning from \"./Warning\";\nexport default {\n  props: {\n    wizardData: {\n      type: Object,\n      required: true\n    }\n  },\n  components: {\n    Warning\n  },\n  data() {\n    return {\n      filename: null,\n      displayFileName: null,\n      form: {\n        image: \"\"\n      }\n    };\n  },\n\n  watch: {\n    async filename(file) {\n      this.$Progress.start();\n      console.log(\"uploading file...\");\n      const data = new FormData();\n      data.append(\"file\", file);\n      data.append(\"upload_preset\", \"woundscars\");\n      const res = await fetch(\n        \"https://api.cloudinary.com/v1_1/nikolamus/image/upload\",\n        {\n          method: \"POST\",\n          body: data\n        }\n      );\n      const uploadedFile = await res.json();\n      // user feedback\n      this.$Progress.finish();\n      this.$snackbar.open({\n        message: `Image uploaded sucessfullly`,\n        position: \"is-top\"\n      });\n      this.displayFileName = file.name;\n\n      // update form\n      this.form.image = uploadedFile.secure_url;\n      Object.assign(this.wizardData, this.form);\n    }\n  }\n};\n</script>\n\n<style scoped>\n.button {\n  margin: auto !important;\n}\n</style>\n\n\n"],"sourceRoot":"src/components"}]}