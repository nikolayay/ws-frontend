{"remainingRequest":"/Users/nikolay/projects/frontend/node_modules/babel-loader/lib/index.js!/Users/nikolay/projects/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/nikolay/projects/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nikolay/projects/frontend/src/components/ScarCard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nikolay/projects/frontend/src/components/ScarCard.vue","mtime":1556202083176},{"path":"/Users/nikolay/projects/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nikolay/projects/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nikolay/projects/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nikolay/projects/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport moment from \"moment\";\nimport Vue from \"vue\";\nimport ScarInfoModal from \"./modals/ScarInfoModal.vue\";\nVue.prototype.moment = moment;\nexport default {\n  props: {\n    scar: {\n      type: Object,\n      required: true\n    }\n  },\n  components: {\n    ScarInfoModal: ScarInfoModal\n  },\n  computed: {\n    causes: function causes() {\n      return this.scar.causes.join(\", \") || \"not specified\";\n    },\n    bodySites: function bodySites() {\n      return this.scar.bodySites.join(\", \") || \"not specified\";\n    },\n    posas: function posas() {\n      return this.scar.posasScore || 0;\n    },\n    date: function date() {\n      return moment(this.scar.date).fromNow() || \"not specified\";\n    },\n    status: function status() {\n      return this.scar.processingStatus ? this.scar.processingStatus[0] + this.scar.processingStatus.toLowerCase().slice(1) : \"Error\";\n    },\n    treatments: function treatments() {\n      return this.scar.treatmetns || null;\n    },\n    statusType: function statusType() {\n      switch (this.status) {\n        case \"Success\":\n          return \"is-primary\";\n\n        case \"Processing\":\n          return \"is-info\";\n\n        default:\n          return \"is-warning\";\n      }\n    }\n  },\n  methods: {\n    showInfo: function showInfo(scar) {\n      var props = {\n        id: scar.id,\n        causes: this.causes,\n        bodySites: this.bodySites,\n        posas: this.posas,\n        date: this.date,\n        treatments: this.treatments\n      };\n      this.$modal.open({\n        parent: this,\n        component: ScarInfoModal,\n        props: props,\n        hasModalCard: true\n      });\n    }\n  }\n};",{"version":3,"sources":["ScarCard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,OAAA,MAAA,MAAA,QAAA;AACA,OAAA,GAAA,MAAA,KAAA;AACA,OAAA,aAAA,MAAA,4BAAA;AAEA,GAAA,CAAA,SAAA,CAAA,MAAA,GAAA,MAAA;AAEA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA;AADA,GADA;AAQA,EAAA,UAAA,EAAA;AACA,IAAA,aAAA,EAAA;AADA,GARA;AAYA,EAAA,QAAA,EAAA;AACA,IAAA,MADA,oBACA;AACA,aAAA,KAAA,IAAA,CAAA,MAAA,CAAA,IAAA,CAAA,IAAA,KAAA,eAAA;AACA,KAHA;AAIA,IAAA,SAJA,uBAIA;AACA,aAAA,KAAA,IAAA,CAAA,SAAA,CAAA,IAAA,CAAA,IAAA,KAAA,eAAA;AACA,KANA;AAOA,IAAA,KAPA,mBAOA;AACA,aAAA,KAAA,IAAA,CAAA,UAAA,IAAA,CAAA;AACA,KATA;AAUA,IAAA,IAVA,kBAUA;AACA,aAAA,MAAA,CAAA,KAAA,IAAA,CAAA,IAAA,CAAA,CAAA,OAAA,MAAA,eAAA;AACA,KAZA;AAaA,IAAA,MAbA,oBAaA;AACA,aAAA,KAAA,IAAA,CAAA,gBAAA,GACA,KAAA,IAAA,CAAA,gBAAA,CAAA,CAAA,IACA,KAAA,IAAA,CAAA,gBAAA,CAAA,WAAA,GAAA,KAAA,CAAA,CAAA,CAFA,GAGA,OAHA;AAIA,KAlBA;AAmBA,IAAA,UAnBA,wBAmBA;AACA,aAAA,KAAA,IAAA,CAAA,UAAA,IAAA,IAAA;AACA,KArBA;AAsBA,IAAA,UAtBA,wBAsBA;AACA,cAAA,KAAA,MAAA;AACA,aAAA,SAAA;AACA,iBAAA,YAAA;;AACA,aAAA,YAAA;AACA,iBAAA,SAAA;;AACA;AACA,iBAAA,YAAA;AANA;AAQA;AA/BA,GAZA;AA+CA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,oBACA,IADA,EACA;AACA,UAAA,KAAA,GAAA;AACA,QAAA,EAAA,EAAA,IAAA,CAAA,EADA;AAEA,QAAA,MAAA,EAAA,KAAA,MAFA;AAGA,QAAA,SAAA,EAAA,KAAA,SAHA;AAIA,QAAA,KAAA,EAAA,KAAA,KAJA;AAKA,QAAA,IAAA,EAAA,KAAA,IALA;AAMA,QAAA,UAAA,EAAA,KAAA;AANA,OAAA;AAQA,WAAA,MAAA,CAAA,IAAA,CAAA;AACA,QAAA,MAAA,EAAA,IADA;AAEA,QAAA,SAAA,EAAA,aAFA;AAGA,QAAA,KAAA,EAAA,KAHA;AAIA,QAAA,YAAA,EAAA;AAJA,OAAA;AAMA;AAhBA;AA/CA,CAAA","sourcesContent":["<template>\n  <div @click=\"showInfo(scar)\" class=\"card\">\n    <header class=\"card-header\">\n      <b-tag class=\"card-header-title status\" :type=\"statusType\" rounded>{{status}}</b-tag>\n      <p class=\"card-header-title time\">{{moment(scar.addedAt).fromNow()}}</p>\n    </header>\n    <div class=\"card-content\">\n      <div class=\"content\">\n        <div class=\"info\">\n          <div>\n            <strong>Cause(s):</strong>\n            {{causes}}\n          </div>\n\n          <div>\n            <strong>Body Site(s):</strong>\n            {{bodySites}}\n          </div>\n\n          <div>\n            <strong>Posas Score:</strong>\n            {{posas}}\n          </div>\n          <div>\n            <strong>Date of injury:</strong>\n            {{date}}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport moment from \"moment\";\nimport Vue from \"vue\";\nimport ScarInfoModal from \"./modals/ScarInfoModal.vue\";\n\nVue.prototype.moment = moment;\n\nexport default {\n  props: {\n    scar: {\n      type: Object,\n      required: true\n    }\n  },\n\n  components: {\n    ScarInfoModal\n  },\n\n  computed: {\n    causes() {\n      return this.scar.causes.join(\", \") || \"not specified\";\n    },\n    bodySites() {\n      return this.scar.bodySites.join(\", \") || \"not specified\";\n    },\n    posas() {\n      return this.scar.posasScore || 0;\n    },\n    date() {\n      return moment(this.scar.date).fromNow() || \"not specified\";\n    },\n    status() {\n      return this.scar.processingStatus\n        ? this.scar.processingStatus[0] +\n            this.scar.processingStatus.toLowerCase().slice(1)\n        : \"Error\";\n    },\n    treatments() {\n      return this.scar.treatmetns || null;\n    },\n    statusType() {\n      switch (this.status) {\n        case \"Success\":\n          return \"is-primary\";\n        case \"Processing\":\n          return \"is-info\";\n        default:\n          return \"is-warning\";\n      }\n    }\n    \n  },\n\n  methods: {\n    showInfo(scar) {\n      const props = {\n        id: scar.id,\n        causes: this.causes,\n        bodySites: this.bodySites,\n        posas: this.posas,\n        date: this.date,\n        treatments: this.treatments\n      };\n      this.$modal.open({\n        parent: this,\n        component: ScarInfoModal,\n        props,\n        hasModalCard: true\n      });\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 24px;\n}\n\n.card-header-title {\n  flex-grow: 0;\n  font-size: 13px;\n}\n\n.content {\n  display: grid;\n  grid-template-columns: auto auto;\n  justify-items: start;\n\n  .info {\n    text-align: start;\n  }\n}\n\n\n.status {\n  margin-left: 4px;\n}\n\n.ball {\n  width: 1rem;\n  height: 1rem;\n  margin-right: 5px;\n  border-radius: 50%;\n  border: 1px solid black;\n}\n</style>"],"sourceRoot":"src/components"}]}