{"remainingRequest":"/Users/nikolay/new-wounds-scars/frontend/node_modules/thread-loader/dist/cjs.js!/Users/nikolay/new-wounds-scars/frontend/node_modules/babel-loader/lib/index.js!/Users/nikolay/new-wounds-scars/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/nikolay/new-wounds-scars/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nikolay/new-wounds-scars/frontend/src/components/CreateEntryStepperScarInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nikolay/new-wounds-scars/frontend/src/components/CreateEntryStepperScarInfo.vue","mtime":1549742287937},{"path":"/Users/nikolay/new-wounds-scars/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nikolay/new-wounds-scars/frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nikolay/new-wounds-scars/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nikolay/new-wounds-scars/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nikolay/new-wounds-scars/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport CreateEntryStepperBodySiteModal from \"@/components/CreateEntryStepperBodySiteModal\";\nimport formWizardMixin from \"@/mixins/formWizardMixin\";\nexport default {\n  mixins: [formWizardMixin],\n  components: {\n    CreateEntryStepperBodySiteModal: CreateEntryStepperBodySiteModal\n  },\n  data: function data() {\n    return {\n      isModalActive: false,\n      form: {\n        selected: [],\n        scarDate: null,\n        causes: [],\n        conditions: []\n      }\n    };\n  },\n  computed: {\n    bodySiteText: function bodySiteText() {\n      return this.form.selected.length > 0 ? \"You have selected: \".concat(this.form.selected.map(function (el) {\n        return el.id;\n      }).join(\", \")) : \"Please specify body site\";\n    }\n  },\n  methods: {\n    plsWork: function plsWork() {\n      console.log(\"WOOOORK\");\n    }\n  }\n};",{"version":3,"sources":["CreateEntryStepperScarInfo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyEA,OAAA,+BAAA,MAAA,8CAAA;AACA,OAAA,eAAA,MAAA,0BAAA;AAEA,eAAA;AACA,EAAA,MAAA,EAAA,CAAA,eAAA,CADA;AAEA,EAAA,UAAA,EAAA;AAAA,IAAA,+BAAA,EAAA;AAAA,GAFA;AAGA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,aAAA,EAAA,KADA;AAEA,MAAA,IAAA,EAAA;AACA,QAAA,QAAA,EAAA,EADA;AAEA,QAAA,QAAA,EAAA,IAFA;AAGA,QAAA,MAAA,EAAA,EAHA;AAIA,QAAA,UAAA,EAAA;AAJA;AAFA,KAAA;AASA,GAbA;AAcA,EAAA,QAAA,EAAA;AACA,IAAA,YADA,0BACA;AACA,aAAA,KAAA,IAAA,CAAA,QAAA,CAAA,MAAA,GAAA,CAAA,gCACA,KAAA,IAAA,CAAA,QAAA,CAAA,GAAA,CAAA,UAAA,EAAA;AAAA,eAAA,EAAA,CAAA,EAAA;AAAA,OAAA,EAAA,IAAA,CAAA,IAAA,CADA,IAEA,0BAFA;AAGA;AALA,GAdA;AAqBA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,SAAA;AACA;AAHA;AArBA,CAAA","sourcesContent":["<template>\n  <div>\n    <b-field horizontal label=\"Date of Scar\">\n      <b-datepicker\n        v-model=\"form.scarDate\"\n        placeholder=\"Select the day when scar was recieved\"\n        icon=\"calendar-today\"\n      ></b-datepicker>\n    </b-field>\n\n    <b-field horizontal label=\"Location of Scar\">\n      <button @click=\"isModalActive = true\" class=\"button is-fullwidth\">{{bodySiteText}}</button>\n    </b-field>\n\n    <b-field horizontal label=\"Do you suffer from any of the following?\">\n      <b-select\n        class=\"conditions\"\n        native-size=\"3\"\n        multiple\n        v-model=\"form.conditions\"\n        expanded\n        placeholder=\"Select all that apply\"\n      >\n        <option disabled>Select all that apply</option>\n        <option>Arnold-Chiari malformations</option>\n        <option>Anxiety</option>\n        <option>Autoiommune disease</option>\n        <option>Cardiovascular Risks</option>\n        <option>Cutaneous Allodynia</option>\n        <option>Depression</option>\n        <option>Diabetes</option>\n        <option>Dystonia</option>\n        <option>Fibromyalgia</option>\n        <option>Hemicrania continua</option>\n        <option>Idiopathic Intracranial Hypertension</option>\n        <option>Lupus</option>\n        <option>Raynaud’s</option>\n        <option>Seizures</option>\n        <option>Sjogren’s syndrome</option>\n        <option>Thyroid dysfunction</option>\n        <option>Trigeminal neuralgia</option>\n      </b-select>\n    </b-field>\n\n    <b-field horizontal label=\"Cause of Scar\">\n      <b-select\n        class=\"causes\"\n        native-size=\"3\"\n        multiple\n        v-model=\"form.causes\"\n        expanded\n        placeholder=\"Select all that apply\"\n      >\n        <option disabled>Select all that apply</option>\n        <option>1</option>\n        <option>1\">1</option>\n        <option>2</option>\n        <option>3</option>\n        <option>4</option>\n        <option>5</option>\n        <option>56</option>\n        <option>6\">34</option>\n        <option>2134</option>\n      </b-select>\n    </b-field>\n\n    <b-modal :active.sync=\"isModalActive\" has-modal-card>\n      <create-entry-stepper-body-site-modal :form=\"form\"></create-entry-stepper-body-site-modal>\n    </b-modal>\n  </div>\n</template>\n\n<script>\nimport CreateEntryStepperBodySiteModal from \"@/components/CreateEntryStepperBodySiteModal\";\nimport formWizardMixin from \"@/mixins/formWizardMixin\";\n\nexport default {\n  mixins: [formWizardMixin],\n  components: { CreateEntryStepperBodySiteModal },\n  data: () => {\n    return {\n      isModalActive: false,\n      form: {\n        selected: [],\n        scarDate: null,\n        causes: [],\n        conditions: []\n      }\n    };\n  },\n  computed: {\n    bodySiteText() {\n      return this.form.selected.length > 0\n        ? `You have selected: ${this.form.selected.map(el => el.id).join(\", \")}`\n        : \"Please specify body site\";\n    }\n  },\n  methods: {\n    plsWork() {\n      console.log(\"WOOOORK\");\n    }\n  }\n};\n</script>\n\n<style scoped>\n</style>"],"sourceRoot":"src/components"}]}