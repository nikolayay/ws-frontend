{"remainingRequest":"/Users/nikolay/projects/frontend/node_modules/babel-loader/lib/index.js!/Users/nikolay/projects/frontend/node_modules/eslint-loader/index.js??ref--13-0!/Users/nikolay/projects/frontend/src/router.js","dependencies":[{"path":"/Users/nikolay/projects/frontend/src/router.js","mtime":1556202083186},{"path":"/Users/nikolay/projects/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nikolay/projects/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nikolay/projects/frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from \"vue\";\nimport Router from \"vue-router\";\nimport { get } from \"./session\"; // import Dashboard from \"@/views/Dashboard\";\n// import Login from \"@/views/Login\";\n// import SignUp from \"@/views/SignUp\";\n// import CreateEntry from \"@/views/CreateEntry\";\n// import Research from \"@/views/Research\";\n\nVue.use(Router);\nvar router = new Router({\n  mode: \"history\",\n  base: process.env.BASE_URL,\n  routes: [{\n    path: \"/\",\n    name: \"Home\",\n    component: function component() {\n      return import(\"@/views/Dashboard\");\n    },\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: \"/research\",\n    name: \"Research\",\n    component: function component() {\n      return import(\"@/views/Research\");\n    },\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: \"/create-entry\",\n    component: function component() {\n      return import(\"@/views/CreateEntry\");\n    },\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: \"/signup\",\n    name: \"signup\",\n    component: function component() {\n      return import(\"@/views/SignUp\");\n    }\n  }, {\n    path: \"/login\",\n    name: \"login\",\n    component: function component() {\n      return import(\"@/views/Login\");\n    }\n  }]\n});\nrouter.afterEach(function () {\n  //  finish the progress bar\n  router.app.$Progress.finish();\n});\nrouter.beforeEach(function (to, from, next) {\n  if (to.matched.some(function (record) {\n    return record.meta.requiresAuth;\n  })) {\n    router.app.$Progress.start(); // this route requires auth, check if logged in\n    // if not, redirect to login page.\n\n    var t = get();\n\n    if (!t) {\n      next({\n        path: \"/login\",\n        query: {\n          redirect: to.fullPath\n        }\n      });\n    } else {\n      next();\n    }\n  } else {\n    next(); // make sure to always call next()!\n  }\n});\nexport default router;",{"version":3,"sources":["/Users/nikolay/projects/frontend/src/router.js"],"names":["Vue","Router","get","use","router","mode","base","process","env","BASE_URL","routes","path","name","component","meta","requiresAuth","afterEach","app","$Progress","finish","beforeEach","to","from","next","matched","some","record","start","t","query","redirect","fullPath"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,SAASC,GAAT,QAAoB,WAApB,C,CACA;AACA;AACA;AACA;AACA;;AAEAF,GAAG,CAACG,GAAJ,CAAQF,MAAR;AAEA,IAAMG,MAAM,GAAG,IAAIH,MAAJ,CAAW;AACxBI,EAAAA,IAAI,EAAE,SADkB;AAExBC,EAAAA,IAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAFM;AAGxBC,EAAAA,MAAM,EAAE,CACN;AACEC,IAAAA,IAAI,EAAE,GADR;AAEEC,IAAAA,IAAI,EAAE,MAFR;AAGEC,IAAAA,SAAS,EAAE;AAAA,aAAM,OAAO,mBAAP,CAAN;AAAA,KAHb;AAIEC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,YAAY,EAAE;AAAhB;AAJR,GADM,EAON;AACEJ,IAAAA,IAAI,EAAE,WADR;AAEEC,IAAAA,IAAI,EAAE,UAFR;AAGEC,IAAAA,SAAS,EAAE;AAAA,aAAM,OAAO,kBAAP,CAAN;AAAA,KAHb;AAIEC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,YAAY,EAAE;AAAhB;AAJR,GAPM,EAaN;AACEJ,IAAAA,IAAI,EAAE,eADR;AAEEE,IAAAA,SAAS,EAAE;AAAA,aAAM,OAAO,qBAAP,CAAN;AAAA,KAFb;AAGEC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,YAAY,EAAE;AAAhB;AAHR,GAbM,EAkBN;AACEJ,IAAAA,IAAI,EAAE,SADR;AAEEC,IAAAA,IAAI,EAAE,QAFR;AAGEC,IAAAA,SAAS,EAAE;AAAA,aAAM,OAAO,gBAAP,CAAN;AAAA;AAHb,GAlBM,EAuBN;AACEF,IAAAA,IAAI,EAAE,QADR;AAEEC,IAAAA,IAAI,EAAE,OAFR;AAGEC,IAAAA,SAAS,EAAE;AAAA,aAAM,OAAO,eAAP,CAAN;AAAA;AAHb,GAvBM;AAHgB,CAAX,CAAf;AAkCAT,MAAM,CAACY,SAAP,CAAiB,YAAM;AACrB;AACAZ,EAAAA,MAAM,CAACa,GAAP,CAAWC,SAAX,CAAqBC,MAArB;AACD,CAHD;AAKAf,MAAM,CAACgB,UAAP,CAAkB,UAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAoB;AACpC,MAAIF,EAAE,CAACG,OAAH,CAAWC,IAAX,CAAgB,UAAAC,MAAM;AAAA,WAAIA,MAAM,CAACZ,IAAP,CAAYC,YAAhB;AAAA,GAAtB,CAAJ,EAAyD;AACvDX,IAAAA,MAAM,CAACa,GAAP,CAAWC,SAAX,CAAqBS,KAArB,GADuD,CAEvD;AACA;;AACA,QAAMC,CAAC,GAAG1B,GAAG,EAAb;;AACA,QAAI,CAAC0B,CAAL,EAAQ;AACNL,MAAAA,IAAI,CAAC;AACHZ,QAAAA,IAAI,EAAE,QADH;AAEHkB,QAAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAET,EAAE,CAACU;AAAf;AAFJ,OAAD,CAAJ;AAID,KALD,MAKO;AACLR,MAAAA,IAAI;AACL;AACF,GAbD,MAaO;AACLA,IAAAA,IAAI,GADC,CACG;AACT;AACF,CAjBD;AAmBA,eAAenB,MAAf","sourcesContent":["import Vue from \"vue\";\nimport Router from \"vue-router\";\nimport { get } from \"./session\";\n// import Dashboard from \"@/views/Dashboard\";\n// import Login from \"@/views/Login\";\n// import SignUp from \"@/views/SignUp\";\n// import CreateEntry from \"@/views/CreateEntry\";\n// import Research from \"@/views/Research\";\n\nVue.use(Router);\n\nconst router = new Router({\n  mode: \"history\",\n  base: process.env.BASE_URL,\n  routes: [\n    {\n      path: \"/\",\n      name: \"Home\",\n      component: () => import(\"@/views/Dashboard\"),\n      meta: { requiresAuth: true }\n    },\n    {\n      path: \"/research\",\n      name: \"Research\",\n      component: () => import(\"@/views/Research\"),\n      meta: { requiresAuth: true }\n    },\n    {\n      path: \"/create-entry\",\n      component: () => import(\"@/views/CreateEntry\"),\n      meta: { requiresAuth: true }\n    },\n    {\n      path: \"/signup\",\n      name: \"signup\",\n      component: () => import(\"@/views/SignUp\")\n    },\n    {\n      path: \"/login\",\n      name: \"login\",\n      component: () => import(\"@/views/Login\")\n    }\n  ]\n});\n\nrouter.afterEach(() => {\n  //  finish the progress bar\n  router.app.$Progress.finish();\n});\n\nrouter.beforeEach((to, from, next) => {\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    router.app.$Progress.start();\n    // this route requires auth, check if logged in\n    // if not, redirect to login page.\n    const t = get();\n    if (!t) {\n      next({\n        path: \"/login\",\n        query: { redirect: to.fullPath }\n      });\n    } else {\n      next();\n    }\n  } else {\n    next(); // make sure to always call next()!\n  }\n});\n\nexport default router;\n"]}]}