{"remainingRequest":"/Users/nikolay/new-wounds-scars/frontend/node_modules/babel-loader/lib/index.js!/Users/nikolay/new-wounds-scars/frontend/node_modules/eslint-loader/index.js??ref--13-0!/Users/nikolay/new-wounds-scars/frontend/src/main.js","dependencies":[{"path":"/Users/nikolay/new-wounds-scars/frontend/src/main.js","mtime":1556202210047},{"path":"/Users/nikolay/new-wounds-scars/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nikolay/new-wounds-scars/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nikolay/new-wounds-scars/frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/nikolay/new-wounds-scars/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\nimport Vue from \"vue\";\nimport App from \"./App.vue\";\nimport router from \"./router\";\nimport \"./registerServiceWorker\";\nimport titleMixin from \"./mixins/titleMixin\";\nVue.mixin(titleMixin); // CSS framework\n\nimport VueProgressBar from \"vue-progressbar\";\nimport Buefy from \"buefy\";\nVue.use(Buefy);\n\nrequire(\"./assets/main.scss\"); // Apollo\n\n\nimport VueApollo from \"vue-apollo\";\nimport { ApolloClient } from \"apollo-client\";\nimport { setContext } from \"apollo-link-context\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\"; // HTTP connect to api to the API\n\nvar httpLink = new HttpLink({\n  uri: process.env.NODE_ENV === \"production\" ? \"https://my-project-backend.now.sh/graphql\" : process.env.VUE_APP_API\n}); // SESSION\n\nimport VueSession from \"vue-session\";\nVue.use(VueSession, {\n  persist: true\n});\nimport { get } from \"./session\";\nvar httpLinkAuth = setContext(function (_, _ref) {\n  var headers = _ref.headers;\n  var t = get();\n  return {\n    headers: _objectSpread({}, headers, {\n      Authorization: t ? \"Bearer \".concat(t) : \"\"\n    })\n  };\n}); // Create the apollo client\n\nvar apolloClient = new ApolloClient({\n  link: httpLinkAuth.concat(httpLink),\n  cache: new InMemoryCache()\n});\nVue.use(VueProgressBar);\nVue.use(VueApollo);\nvar apolloProvider = new VueApollo({\n  defaultClient: apolloClient\n});\nVue.config.productionTip = false;\nVue.prototype.$vueEventBus = new Vue();\nnew Vue({\n  router: router,\n  apolloProvider: apolloProvider,\n  render: function render(h) {\n    return h(App);\n  }\n}).$mount(\"#app\");",{"version":3,"sources":["/Users/nikolay/new-wounds-scars/frontend/src/main.js"],"names":["Vue","App","router","titleMixin","mixin","VueProgressBar","Buefy","use","require","VueApollo","ApolloClient","setContext","HttpLink","InMemoryCache","httpLink","uri","process","env","NODE_ENV","VUE_APP_API","VueSession","persist","get","httpLinkAuth","_","headers","t","Authorization","apolloClient","link","concat","cache","apolloProvider","defaultClient","config","productionTip","prototype","$vueEventBus","render","h","$mount"],"mappings":";;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,yBAAP;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AAEAH,GAAG,CAACI,KAAJ,CAAUD,UAAV,E,CAEA;;AACA,OAAOE,cAAP,MAA2B,iBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACAN,GAAG,CAACO,GAAJ,CAAQD,KAAR;;AAEAE,OAAO,CAAC,oBAAD,CAAP,C,CAEA;;;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,aAAT,QAA8B,uBAA9B,C,CAEA;;AACA,IAAMC,QAAQ,GAAG,IAAIF,QAAJ,CAAa;AAC5BG,EAAAA,GAAG,EACDC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GACI,2CADJ,GAEIF,OAAO,CAACC,GAAR,CAAYE;AAJU,CAAb,CAAjB,C,CAOA;;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACApB,GAAG,CAACO,GAAJ,CAAQa,UAAR,EAAoB;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAApB;AACA,SAASC,GAAT,QAAoB,WAApB;AAEA,IAAMC,YAAY,GAAGZ,UAAU,CAAC,UAACa,CAAD,QAAoB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AAClD,MAAMC,CAAC,GAAGJ,GAAG,EAAb;AAEA,SAAO;AACLG,IAAAA,OAAO,oBACFA,OADE;AAELE,MAAAA,aAAa,EAAED,CAAC,oBAAaA,CAAb,IAAmB;AAF9B;AADF,GAAP;AAMD,CAT8B,CAA/B,C,CAWA;;AACA,IAAME,YAAY,GAAG,IAAIlB,YAAJ,CAAiB;AACpCmB,EAAAA,IAAI,EAAEN,YAAY,CAACO,MAAb,CAAoBhB,QAApB,CAD8B;AAEpCiB,EAAAA,KAAK,EAAE,IAAIlB,aAAJ;AAF6B,CAAjB,CAArB;AAKAb,GAAG,CAACO,GAAJ,CAAQF,cAAR;AACAL,GAAG,CAACO,GAAJ,CAAQE,SAAR;AAEA,IAAMuB,cAAc,GAAG,IAAIvB,SAAJ,CAAc;AACnCwB,EAAAA,aAAa,EAAEL;AADoB,CAAd,CAAvB;AAIA5B,GAAG,CAACkC,MAAJ,CAAWC,aAAX,GAA2B,KAA3B;AACAnC,GAAG,CAACoC,SAAJ,CAAcC,YAAd,GAA6B,IAAIrC,GAAJ,EAA7B;AAEA,IAAIA,GAAJ,CAAQ;AACNE,EAAAA,MAAM,EAANA,MADM;AAEN8B,EAAAA,cAAc,EAAdA,cAFM;AAGNM,EAAAA,MAAM,EAAE,gBAAAC,CAAC;AAAA,WAAIA,CAAC,CAACtC,GAAD,CAAL;AAAA;AAHH,CAAR,EAIGuC,MAJH,CAIU,MAJV","sourcesContent":["import Vue from \"vue\";\nimport App from \"./App.vue\";\nimport router from \"./router\";\nimport \"./registerServiceWorker\";\nimport titleMixin from \"./mixins/titleMixin\";\n\nVue.mixin(titleMixin);\n\n// CSS framework\nimport VueProgressBar from \"vue-progressbar\";\nimport Buefy from \"buefy\";\nVue.use(Buefy);\n\nrequire(\"./assets/main.scss\");\n\n// Apollo\nimport VueApollo from \"vue-apollo\";\nimport { ApolloClient } from \"apollo-client\";\nimport { setContext } from \"apollo-link-context\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\n\n// HTTP connect to api to the API\nconst httpLink = new HttpLink({\n  uri:\n    process.env.NODE_ENV === \"production\"\n      ? \"https://my-project-backend.now.sh/graphql\"\n      : process.env.VUE_APP_API\n});\n\n// SESSION\nimport VueSession from \"vue-session\";\nVue.use(VueSession, { persist: true });\nimport { get } from \"./session\";\n\nconst httpLinkAuth = setContext((_, { headers }) => {\n  const t = get();\n\n  return {\n    headers: {\n      ...headers,\n      Authorization: t ? `Bearer ${t}` : \"\"\n    }\n  };\n});\n\n// Create the apollo client\nconst apolloClient = new ApolloClient({\n  link: httpLinkAuth.concat(httpLink),\n  cache: new InMemoryCache()\n});\n\nVue.use(VueProgressBar);\nVue.use(VueApollo);\n\nconst apolloProvider = new VueApollo({\n  defaultClient: apolloClient\n});\n\nVue.config.productionTip = false;\nVue.prototype.$vueEventBus = new Vue();\n\nnew Vue({\n  router,\n  apolloProvider,\n  render: h => h(App)\n}).$mount(\"#app\");\n"]}]}