{"remainingRequest":"/Users/nikolay/new-wounds-scars/frontend/node_modules/babel-loader/lib/index.js!/Users/nikolay/new-wounds-scars/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/nikolay/new-wounds-scars/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nikolay/new-wounds-scars/frontend/src/components/wizard/CreateEntryStepperImageUpload.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nikolay/new-wounds-scars/frontend/src/components/wizard/CreateEntryStepperImageUpload.vue","mtime":1556260285254},{"path":"/Users/nikolay/new-wounds-scars/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nikolay/new-wounds-scars/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nikolay/new-wounds-scars/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nikolay/new-wounds-scars/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.object.assign\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/nikolay/new-wounds-scars/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { fabric } from \"fabric\";\nimport Warning from \"@/components/misc/Warning\";\nexport default {\n  props: {\n    wizardData: {\n      type: Object,\n      required: true\n    }\n  },\n  components: {\n    Warning: Warning\n  },\n  data: function data() {\n    return {\n      filename: null,\n      displayFileName: null,\n      form: {\n        image: \"\"\n      }\n    };\n  },\n  mounted: function mounted() {\n    var canvas = this.__canvas = new fabric.Canvas(\"c\", {\n      isDrawingMode: true\n    });\n    canvas.selection = true;\n    canvas.setHeight(500);\n    canvas.setWidth(500);\n    canvas.freeDrawingBrush = new fabric[\"PencilBrush\"](canvas);\n    canvas.freeDrawingBrush.color = \"Black\";\n    canvas.freeDrawingBrush.width = 10;\n  },\n  methods: {\n    clearArtboard: function clearArtboard() {\n      var canvas = this.__canvas;\n      canvas.clear();\n      this.filename = null;\n    },\n    saveImage: function () {\n      var _saveImage = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var canvas, data, res, uploadedFileUpdate;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                canvas = this.__canvas;\n                /*var img = new Image();\n                img.id = \"pic\";\n                img.crossOrigin = 'Anonymous';\n                img.src = canvas.toDataURL();*/\n\n                data = new FormData();\n                data.append(\"file\", canvas.toDataURL(\"image/jpg\"));\n                data.append(\"upload_preset\", \"woundscars\");\n                _context.next = 6;\n                return fetch(\"https://api.cloudinary.com/v1_1/nikolamus/image/upload\", {\n                  method: \"POST\",\n                  body: data\n                });\n\n              case 6:\n                res = _context.sent;\n                _context.next = 9;\n                return res.json();\n\n              case 9:\n                uploadedFileUpdate = _context.sent;\n                this.$snackbar.open({\n                  message: \"Image analysed sucessfullly\",\n                  position: \"is-top\"\n                });\n                /*\n                data.append(\"file\", img);\n                data.append(\"upload_preset\", \"woundscars\");\n                const recog = await fetch(\n                  \"https://api.cloudinary.com/v1_1/nikolamus/image/upload\",\n                    {\n                      method: \"POST\",\n                      body: data\n                    }\n                );\n                 const uploadedFileUpdate = await recog.json();*/\n                // update form\n\n                this.form.image = uploadedFileUpdate.secure_url;\n                Object.assign(this.wizardData, this.form);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function saveImage() {\n        return _saveImage.apply(this, arguments);\n      }\n\n      return saveImage;\n    }()\n  },\n  watch: {\n    filename: function () {\n      var _filename = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(file) {\n        var data, res, uploadedFile, canvas;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(this.filename == null)) {\n                  _context2.next = 3;\n                  break;\n                }\n\n                _context2.next = 20;\n                break;\n\n              case 3:\n                this.$Progress.start();\n                data = new FormData();\n                data.append(\"file\", file);\n                data.append(\"upload_preset\", \"woundscars\");\n                _context2.next = 9;\n                return fetch(\"https://api.cloudinary.com/v1_1/nikolamus/image/upload\", {\n                  method: \"POST\",\n                  body: data\n                });\n\n              case 9:\n                res = _context2.sent;\n                _context2.next = 12;\n                return res.json();\n\n              case 12:\n                uploadedFile = _context2.sent;\n                // user feedback\n                this.$Progress.finish();\n                this.$snackbar.open({\n                  message: \"Image uploaded sucessfullly\",\n                  position: \"is-top\"\n                });\n                this.displayFileName = file.name;\n                canvas = this.__canvas;\n                canvas.setHeight(uploadedFile.height);\n                canvas.setWidth(uploadedFile.width);\n                fabric.Image.fromURL(uploadedFile.secure_url, function (myImg) {\n                  var img1 = myImg.set({\n                    left: 0,\n                    top: 0,\n                    width: uploadedFile.width,\n                    height: uploadedFile.height\n                  });\n                  canvas.add(img1);\n                }, {\n                  crossOrigin: \"anonymous\"\n                });\n\n              case 20:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function filename(_x) {\n        return _filename.apply(this, arguments);\n      }\n\n      return filename;\n    }()\n  }\n};",{"version":3,"sources":["CreateEntryStepperImageUpload.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <warning>Image submission is not secure and is only for demo purposes.</warning>\n\n    <canvas id=\"c\" style=\"border:1px solid #CA0000;\"></canvas>\n\n    <b-field position=\"is-centered\" class=\"file\">\n      <b-upload required accept=\"image/*\" v-model=\"filename\">\n        <a class=\"button is-primary\">\n          <b-icon icon=\"upload\"></b-icon>\n          <span>Click to upload</span>\n        </a>\n      </b-upload>\n      <span class=\"file-name\" v-if=\"filename\">{{ displayFileName }}</span>\n      <a class=\"button is-primary\" v-on:click=\"clearArtboard\">\n        <span>Clear</span>\n      </a>\n      <a class=\"button is-primary\" v-on:click=\"saveImage\">\n        <span>Analyse</span>\n      </a>\n    </b-field>\n\n    <!-- <button @click=\"isModalActive=true\" class=\"button is-primary\">Back to label</button> -->\n    <!-- <b-modal :active.sync=\"isModalActive\" has-modal-card>\n      <scar-label-modal>\n        <img class=\"scar-label\" src=\"@/assets/test.jpg\" alt>\n      </scar-label-modal>\n    </b-modal>-->\n    <br>\n  </div>\n</template>\n\n\n<script>\nimport { fabric } from \"fabric\";\nimport Warning from \"@/components/misc/Warning\";\nexport default {\n  props: {\n    wizardData: {\n      type: Object,\n      required: true\n    }\n  },\n  components: {\n    Warning\n  },\n  data() {\n    return {\n      filename: null,\n      displayFileName: null,\n      form: {\n        image: \"\"\n      }\n    };\n\n  },\n\n\n  mounted: function() {\n    var canvas = (this.__canvas = new fabric.Canvas(\"c\", {\n      isDrawingMode: true\n    }));\n\n    canvas.selection = true;\n    canvas.setHeight(500);\n    canvas.setWidth(500);\n\n    canvas.freeDrawingBrush = new fabric[\"PencilBrush\"](canvas);\n    canvas.freeDrawingBrush.color = \"Black\";\n    canvas.freeDrawingBrush.width = 10;\n  },\n\n  methods: {\n    clearArtboard() {\n      var canvas = this.__canvas;\n      canvas.clear();\n      this.filename = null\n    },\n\n    async saveImage() {\n      var canvas = this.__canvas;\n\n      /*var img = new Image();\n      img.id = \"pic\";\n      img.crossOrigin = 'Anonymous';\n      img.src = canvas.toDataURL();*/\n\n      const data = new FormData();\n      data.append(\"file\", canvas.toDataURL(\"image/jpg\"));\n      data.append(\"upload_preset\", \"woundscars\");\n      const res = await fetch(\n        \"https://api.cloudinary.com/v1_1/nikolamus/image/upload\",\n        {\n          method: \"POST\",\n          body: data\n        }\n      );\n      const uploadedFileUpdate = await res.json();\n\n      this.$snackbar.open({\n        message: `Image analysed sucessfullly`,\n        position: \"is-top\"\n      });\n\n      /*\n      data.append(\"file\", img);\n      data.append(\"upload_preset\", \"woundscars\");\n      const recog = await fetch(\n        \"https://api.cloudinary.com/v1_1/nikolamus/image/upload\",\n          {\n            method: \"POST\",\n            body: data\n          }\n      );\n\n      const uploadedFileUpdate = await recog.json();*/\n\n      // update form\n      this.form.image = uploadedFileUpdate.secure_url;\n      Object.assign(this.wizardData, this.form);\n    }\n  },\n\n  watch: {\n    async filename(file) {\n      if (this.filename == null) {\n        }\n      else {\n        this.$Progress.start();\n        const data = new FormData();\n        data.append(\"file\", file);\n        data.append(\"upload_preset\", \"woundscars\");\n        const res = await fetch(\n          \"https://api.cloudinary.com/v1_1/nikolamus/image/upload\",\n          {\n            method: \"POST\",\n            body: data\n          }\n        );\n        const uploadedFile = await res.json();\n        // user feedback\n        this.$Progress.finish();\n        this.$snackbar.open({\n          message: `Image uploaded sucessfullly`,\n          position: \"is-top\"\n        });\n        this.displayFileName = file.name;\n\n        var canvas = this.__canvas;\n\n        canvas.setHeight(uploadedFile.height);\n        canvas.setWidth(uploadedFile.width);\n\n        fabric.Image.fromURL(\n          uploadedFile.secure_url,\n          function(myImg) {\n            var img1 = myImg.set({\n              left: 0,\n              top: 0,\n              width: uploadedFile.width,\n              height: uploadedFile.height\n            });\n            canvas.add(img1);\n          },\n          { crossOrigin: \"anonymous\" }\n        );\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.button {\n  margin: auto !important;\n}\n</style>\n\n\n"],"sourceRoot":"src/components/wizard"}]}